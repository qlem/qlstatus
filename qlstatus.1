.TH QLSTATUS 1 qlstatus\-VERSION
.SH NAME
\fBqlstatus\fP \- light and modular status bar
.SH SYNOPSIS
.SY qlstatus
.OP \-h
.OP \-v
.OP \-c file
.YS
.SH DESCRIPTION
.PP
qlstatus is a small program with minimalistic and modular approach for generating a status bar for tiling window
managers like \fBdwm(1)\fP and \fBspectrwm(1)\fP.
.SH OPTIONS
.B \-h, \-\-help
.RS 4
Print usage statement.
.RE
.sp
.B \-v, \-\-version
.RS 4
Print version and exit.
.RE
.sp
.B \-c, \-\-config <file>
.RS 4
Load settings from specified configuration file.
.SH CONFIGURATION
.PP
qlstatus first looks for configuration file specified through \fB--config\fP option. If \fB--config\fP is omitted
then it looks for \fI~/.config/qlstatus.conf\fP. If configuration file is not found, qlstatus then is configured
with default settings. A configuration file with default settings can be found in \fI/etc/qlstatus.conf\fP.
.PP
The format of configuration file is a list of settings of the form:
.sp
.RS 4
keyword = setting
.RE
.PP
Comment lines begin with a \(oq#\(cq. For inline comments, \(oq#\(cq must be preceded by a white space or a tab.
.PP
qlstatus allows you to enable and choose which \(lqmodules\(rq to display through global format option.
Each module is composed of \(lqtokens\(rq which may be or not displayed through format option of corresponding module.
Configure global and module outputs by specifying desired format strings. See options below.
.SS global options
.B format
.RS 4
Specify global output format. It may contain the following character sequences to enable and display desired
modules. Any other character will be print.
.PP
.RS 4
.TS
tab(;);
l l.
%D;date and time
%U;CPU usage
%F;CPU frequency
%T;temperature
%M;memory usage
%L;brightness level
%V;audio volume
%B;battery level and status
%W;wireless SSID and signal strength
.TE
.RE
.PP
All modules are enabled by default.
.RE
.sp
.B rate
.RS 4
Specify refresh rate of the output in seconds or milliseconds. Must match pattern [n]s or [n]ms.
.PP
Default: 1s
.RE
.sp
.B enable_spectrwm_colors
.RS 4
Enable or disable the support of spectrwm colors. Should be enable only with spectrwm as window manager.
Must be 0 or 1.
.PP
Default: 0
.RE
.sp
.B critical_color_index
.RS 4
Specify index of desired spectrwm color to use for display modules in critical state. Must be a number in range 0 to 9.
.PP
Default: 1
.SS date and time
.B time_format
.RS 4
Specify format date and time. The format is passed through \fBstrftime(3)\fP.
.PP
Default: %a %d %b %Y, %R %Z
.SS battery level
.B battery_format
.RS 4
Specify module format. It may contain the following character sequences:
.sp
.RS 4
.TS
tab(;);
l l.
%L;current status
%V;battery level in percent
.TE
.RE
.PP
Default: %L %V
.RE
.sp
.B battery_name
.RS 4
Specify battery name. Must match pattern BAT[n].
.PP
Default: BAT0
.RE
.sp
.B battery_full_design
.RS 4
todo..
.PP
Default: 1
.RE
.sp
.B battery_label_full
.RS 4
Specify label to display when battery is fully charged.
.PP
Default: full
.RE
.sp
.B battery_label_charging
.RS 4
Specify label to display when battery is charging.
.PP
Default: chr
.RE
.sp
.B battery_label_discharging
.RS 4
Specify label to display when battery is discharging.
.PP
Default: bat
.RE
.sp
.B battery_label_unknown
.RS 4
Specify label to display when current battery status is unknown.
.PP
Default: unk
.RE
.sp
.B battery_critical
.RS 4
Specify battery critical threshold in percent.
.PP
Default: 20
.SS power notifications
.B battery_notifications
.RS 4
Enable or disable power notifications related to battery events. Must be 0 or 1.
.PP
Default: 1
.RE
.sp
.B battery_notify_icon_full
.RS 4
Specify name or path of the icon to use in notification triggered when battery is fully charged.
.PP
Default: battery-full-charged
.RE
.sp
.B battery_notify_icon_plugged
.RS 4
Specify name or path of the icon to use in notification triggered when AC adapter is plugged.
.PP
Default: ac-adapter
.RE
.sp
.B battery_notify_icon_low
.RS 4
Specify name or path of the icon to use in notification triggered when battery reach the critical threshold.
.PP
Default: battery-caution
.SS CPU usage
.B cpu_format
.RS 4
Specify module format. It may contain the following character sequences:
.sp
.RS 4
.TS
tab(;);
l l.
%L;label
%V;CPU usage in percent
.TE
.RE
.PP
Default: %L %V
.RE
.sp
.B cpu_label
.RS 4
Specify module label.
.PP
Default: cpu
.RE
.sp
.B cpu_critical
.RS 4
Specify critical CPU usage threshold in percent.
.PP
Default: 80
.SS CPU frequency
.B cpu_freq_format
.RS 4
Specify module format. It may contain the following character sequences:
.sp
.RS 4
.TS
tab(;);
l l.
%L;label
%V;CPU frequency
%U;unit
.TE
.RE
.PP
Default: %L %V%U
.RE
.sp
.B cpu_freq_label
.RS 4
Specify module label.
.PP
Default: freq
.RE
.sp
.B cpu_freq_unit
.RS 4
Specify desired frequency unit. Must be KHz, MHz, GHz or smart. smart automatically scales frequency value
to shortest three digit unit.
.PP
Default: MHz
.RE
.sp
.B cpu_freq_scaling
.RS 4
todo..
.PP
Default: 1
.SS temperature
.B temperature_format
.RS 4
Specify module format. It may contain the following character sequences:
.sp
.RS 4
.TS
tab(;);
l l.
%L;label
%V;temperature in degree Celsius
.TE
.RE
.PP
Default: %L %V
.RE
.sp
.B temperature_label
.RS 4
Specify module label.
.PP
Default: temp
.RE
.sp
.B temperature_dir
.RS 4
Specify path for temperature input directory. May contain an asterisk to resolve last directory of the path.
If an asterisk is present then first directory found is chosen.
.PP
Default: /sys/devices/platform/coretemp.0/hwmon/*
.RE
.sp
.B temperature_input
.RS 4
Specify an input file number or a range to compute a temperature average. qlstatus looks for input files that match
pattern temp[r]_input where r is the specified value. Value must match pattern [n] for specific input file or
[n]-[n] for a range of input files.
.PP
Default: 2-5
.RE
.sp
.B temperature_critical
.RS 4
Specify critical temperature threshold in degree Celsius.
.PP
Default: 80
.SS memory usage
.B memory_format
.RS 4
Specify module format. It may contain the following character sequences:
.sp
.RS 4
.TS
tab(;);
l l.
%L;label
%C;used memory
%T;total available memory
%U;unit
%P;used memory in percent
.TE
.RE
.PP
Default: %L %C/%T%U (%P)
.RE
.sp
.B memory_label
.RS 4
Specify module label.
.PP
Default: mem
.RE
.sp
.B memory_unit
.RS 4
Specify desired memory unit. Must be KiB, MiB, GiB or smart. smart automatically scales used and total memory value
to shortest three digit unit.
.PP
Default: MiB
.RE
.sp
.B memory_critical
.RS 4
Specify critical threshold for memory usage in percent.
.PP
Default: 80
.SS brightness level
.B brightness_format
.RS 4
Specify module format. It may contain the following character sequences:
.sp
.RS 4
.TS
tab(;);
l l.
%L;label
%V;brightness level in percent
.TE
.RE
.PP
Default: %L %V
.RE
.sp
.B brightness_label
.RS 4
Specify module label.
.PP
Default: brg
.RE
.sp
.B brightness_dir
.RS 4
Specify path for backlight input directory. Should not be changed.
.PP
Default: /sys/class/backlight/intel_backlight
.SS audio volume
.B volume_format
.RS 4
Specify module format. It may contain the following character sequences:
.sp
.RS 4
.TS
tab(;);
l l.
%L;label
%V;volume level in percent
.TE
.RE
.PP
Default: %L %V
.RE
.sp
.B volume_label
.RS 4
Specify module label.
.PP
Default: vol
.RE
.sp
.B volume_muted_label
.RS 4
Specify module label when audio is muted.
.PP
Default: mut
.RE
.sp
.B volume_sink_name
.RS 4
Specify sink name. See \fBpactl(1)\fP for how to get infos about sinks.
.PP
Default: alsa_output.pci-0000_00_1f.3.analog-stereo
.SS wireless SSID and signal
.B wireless_format
.RS 4
Specify module format. It may contain the following character sequences:
.sp
.RS 4
.TS
tab(;);
l l.
%L;current SSID
%V;signal strength in percent
.TE
.RE
.PP
Default: %L: %V
.RE
.sp
.B wireless_unknown_label
.RS 4
Specify module label when SSID is unknown.
.PP
Default: SSID unk
.RE
.sp
.B wireless_interface
.RS 4
Specify name of wireless interface.
.PP
Default: wlan0
.SH INTEGRATION WITH DWM
.PP
dwm reads the name of the root window and redirects it to the statusbar. The root window is the window within which all
other windows are drawn and arranged by the window manager. Like any other window, the root window has a title/name,
but it is usually undefined because the root window always runs in the background.
.PP
You can compile this C program to redirect qlstatus output as the name of the root window:
.RS 4
.sp
.EX
#include <string.h>
#include <stdlib.h>
#include <stdio.h>
#include <X11/Xlib.h>

int             main(int argc, char *argv[]) {
    Display     *dpy = NULL;
    Window      win = 0;
    size_t      length = 0;
    ssize_t     bytes_read = 0;
    char        *input = NULL;

    dpy = XOpenDisplay(getenv("DISPLAY"));
    if (dpy == NULL) {
        fprintf(stderr, "Can't open display, exiting.\\n");
        exit(EXIT_FAILURE);
    }

    win = DefaultRootWindow(dpy);
    while ((bytes_read = getline(&input, &length, stdin)) != EOF) {
        input[strlen(input) - 1] = 0;
        XStoreName(dpy, win, input);
        XFlush(dpy);
    }
    free(input);
    return 0;
}
.EE
.PP
.RE
.PP
Save this code in \fIdwm-setstatus.c\fP and compile it:
.sp
.RS 4
.EX
gcc dwm-setstatus.c -lX11 -o dwm-setstatus
.EE
.RE
.PP
Finally, move or add \fBdwm-setstatus\fP binary to your $PATH. To use qlstatus as dwm status bar, you can for example
add into \fI~/.xinitrc\fP:
.sp
.RS 4
.EX
\&...

(qlstatus | dwm-setstatus) &
exec dwm
.EE
.SH INTEGRATION WITH SPECTRWM
Specify qlstatus as external script through the option \fBbar_action\fP in your spectrwm configuration file:
.sp
.RS 4
bar_action = qlstatus
.RE
.PP
That's all.
.SH NOTES
The support of spectrwm colors is stopped for now.
.SH SEE ALSO
.BR dwm (1),
.BR spectrwm (1)
.SH BUGS
In case of bug, please open an issue at
.UR https://\:github.com/\:qlem/\:qlstatus
.UE .
.SH AUTHORS
qlstatus was written and currently maintained by Cl√©ment Dommerc.
